import grammy from 'grammy';
import text_to_speech from '../helpers/text_to_speech.js';

export default {
    name: 'v',
    description: '[–≤—ñ–¥–ø–æ–≤—ñ–¥—å] /t | /t <—Ç–µ–∫—Å—Ç> :: –æ–∑–≤—É—á–∏—Ç–∏ —Ç–µ–∫—Å—Ç',
    /**
     * 
     * @param {grammy.CommandContext<grammy.Context>} ctx 
     */
    execute: async (ctx) => {
        const text = (ctx.message?.reply_to_message?.text || ctx.message.text)
            .replace('/v', '')
            .trim();
        if (!text) return;
        try {
            const res = await text_to_speech({text: text});
            const fd = new grammy.InputFile(res);
            await ctx.replyWithVoice(fd);
        }
        catch (e) {
            console.error(e);
            await ctx.reply('–∞–Ω–ª–∞–∫—ñü•Ä');
        }
    }
}